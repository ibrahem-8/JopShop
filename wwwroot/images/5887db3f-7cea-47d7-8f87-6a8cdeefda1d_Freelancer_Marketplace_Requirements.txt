
# Software Requirements for Freelancer Marketplace + Store

## 1️⃣ Project Overview:

**اسم المشروع:**  
Freelancer Marketplace with Store Module

**الهدف:**  
منصة تسمح للعملاء وأصحاب المشاريع بنشر وظائف، وللفريلانسرز بالتقديم عليها. بالإضافة لذلك، كل فريلانسر يمتلك متجرًا خاصًا يستطيع من خلاله بيع منتجات رقمية أو دورات تدريبية.

## 2️⃣ User Roles:

| Role         | Description                                                      |
|-------------|------------------------------------------------------------------|
| Admin       | مسؤول عن إدارة الموقع بالكامل (المستخدمين، المشاريع، المتاجر). |
| Client      | صاحب المشروع، يقوم بنشر وظائف، التفاعل مع الفريلانسرز، شراء منتجات. |
| Freelancer  | يقدم عروضًا على المشاريع، يدير متجره الشخصي، يبيع منتجات أو دورات. |

## 3️⃣ Core Functional Requirements:

### A. Authentication & Authorization:
- تسجيل حساب جديد (كـ Client أو Freelancer).
- تسجيل دخول وخروج.
- استعادة كلمة المرور.
- صفحة إعدادات الحساب (تحديث البيانات الشخصية، الصورة، إلخ).

### B. Freelancer Marketplace:

#### 1. Project Posting:
- يستطيع العميل إنشاء مشروع جديد:
  - العنوان.
  - الوصف.
  - الميزانية.
  - مدة التسليم.
  - المهارات المطلوبة.

#### 2. Project Bidding:
- الفريلانسر يستطيع التقديم على المشروع (عرض السعر + مدة الإنجاز + رسالة مرفقة).

#### 3. Project Management:
- العميل يمكنه قبول أو رفض عروض الفريلانسرز.
- إدارة حالة المشروع: Open → In Progress → Completed.

#### 4. Messaging System:
- نظام محادثة بين العميل والفريلانسر لتفاصيل المشروع.

#### 5. Review & Rating:
- بعد إتمام المشروع، يمكن للطرفين تقييم بعضهما البعض.

### C. Freelancer Store (Marketplace for Products/Courses):

#### 1. Product Management:
- الفريلانسر يمكنه إضافة منتجات أو دورات:
  - العنوان.
  - الوصف.
  - السعر.
  - صورة مصغرة.
  - تحميل الملف (للمنتجات الرقمية مثل كتب، تصاميم).
  - رابط الدورة (للدورات).

#### 2. Store Page:
- صفحة مخصصة لكل فريلانسر لعرض منتجاته.
- عرض المنتجات بشكل شبكي مع الأسعار وزر "إضافة إلى السلة" أو "شراء الآن".

#### 3. Cart & Checkout:
- يستطيع العميل شراء أكثر من منتج دفعة واحدة.
- صفحة Checkout بسيطة (لا حاجة لبوابات دفع حقيقية — يمكن تمثيل الدفع يدويًا أو باستخدام Paypal Sandbox).

#### 4. Order Management:
- العميل يمكنه رؤية سجل الطلبات وتنزيل الملفات أو الوصول إلى الدورة.

### D. Admin Panel:
- إدارة جميع المستخدمين.
- عرض وحذف المشاريع.
- إدارة المنتجات والمتاجر.
- رؤية الطلبات والمعاملات.
- تحكم كامل بالموقع.

## 4️⃣ Non-Functional Requirements:

| Requirement      | Description                                                           |
|------------------|-----------------------------------------------------------------------|
| Performance      | تحميل الصفحة يجب ألا يتجاوز 3 ثوانٍ.                                |
| Scalability      | قابلية إضافة مميزات مستقبلية مثل نظام دفع متكامل أو تطبيق جوال.    |
| Security         | حماية بيانات المستخدمين، تشفير كلمات المرور.                        |
| Usability        | واجهة سهلة الاستخدام وسلسة.                                          |

## 5️⃣ Technologies Suggested:

| Part             | Technology                              |
|------------------|----------------------------------------|
| Frontend         | HTML, CSS, JavaScript (Bootstrap / Tailwind) |
| Backend          | PHP (Native or Laravel Framework)      |
| Database         | MySQL                                  |
| Real-time chat (Optional) | Pusher or AJAX Polling              |

## 6️⃣ ER Diagram Tables Summary:

- users
- projects
- bids
- messages
- reviews
- products
- orders
- order_details

## 7️⃣ Possible Future Enhancements:
- الدفع الإلكتروني (PayPal, Stripe).
- تطبيق موبايل للمنصة.
- إشعارات Real-time.
- نظام تصنيف للمهارات.
- نظام عمولة للمنصة عند بيع المنتجات أو إتمام مشروع.
